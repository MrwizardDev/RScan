from cryptography.fernet import Fernet
import os

# Generate a key and save it to a file (run once)
def generate_key():
    key = Fernet.generate_key()
    with open("key.key", "wb") as key_file:
        key_file.write(key)

# Load the previously generated key
def load_key():
    return open("key.key", "rb").read()

# Encrypt a password
def encrypt_password(password, key):
    f = Fernet(key)
    encrypted_password = f.encrypt(password.encode())
    return encrypted_password

# Decrypt a password
def decrypt_password(encrypted_password, key):
    f = Fernet(key)
    decrypted_password = f.decrypt(encrypted_password).decode()
    return decrypted_password

# Generate a strong password
def generate_strong_password(length=12):
    return os.urandom(length).hex()

# Load or generate the key (you should only generate the key once)
generate_key()  # Comment this line out after the key is generated
key = load_key()
